{
  "stats": {
    "suites": 1,
    "tests": 12,
    "passes": 11,
    "pending": 0,
    "failures": 1,
    "start": "2020-02-17T12:20:43.502Z",
    "end": "2020-02-17T12:21:17.902Z",
    "duration": 34400,
    "testsRegistered": 12,
    "passPercent": 91.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fbdc872c-63bf-444d-9aa6-31e129e81c03",
      "title": "",
      "fullFile": "cypress/integration/SignupPage.feature",
      "file": "cypress/integration/SignupPage.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1fa0f176-69f1-4eb4-9dfd-ed3a68c1982e",
          "title": "Signup Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Signup errors validations for invalid credentials (example #1)",
              "fullTitle": "Signup Page Signup errors validations for invalid credentials (example #1)",
              "timedOut": null,
              "duration": 4788,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c226e666-7008-4932-84ba-6fe4d0197b17",
              "parentUUID": "1fa0f176-69f1-4eb4-9dfd-ed3a68c1982e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Signup errors validations for invalid credentials (example #2)",
              "fullTitle": "Signup Page Signup errors validations for invalid credentials (example #2)",
              "timedOut": null,
              "duration": 3156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4973c555-629b-4d0e-98f0-ef0bb06c51c6",
              "parentUUID": "1fa0f176-69f1-4eb4-9dfd-ed3a68c1982e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validations for blank email and password field (example #1)",
              "fullTitle": "Signup Page Error validations for blank email and password field (example #1)",
              "timedOut": null,
              "duration": 1293,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f67b2771-5042-4876-aa8c-f47db8b77cf0",
              "parentUUID": "1fa0f176-69f1-4eb4-9dfd-ed3a68c1982e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validation for blank email field (example #1)",
              "fullTitle": "Signup Page Error validation for blank email field (example #1)",
              "timedOut": null,
              "duration": 1901,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "81678a15-ebb3-4ddb-89ce-c5f5bfb1057b",
              "parentUUID": "1fa0f176-69f1-4eb4-9dfd-ed3a68c1982e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validation for blank password field (example #1)",
              "fullTitle": "Signup Page Error validation for blank password field (example #1)",
              "timedOut": null,
              "duration": 2086,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9fd8a1cc-b503-4da8-a7c3-d3f08deca840",
              "parentUUID": "1fa0f176-69f1-4eb4-9dfd-ed3a68c1982e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Signup errors for not accepting the Perlego's terms and conditions (example #1)",
              "fullTitle": "Signup Page Signup errors for not accepting the Perlego's terms and conditions (example #1)",
              "timedOut": null,
              "duration": 2437,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "24541ca3-8282-4d7c-b055-fdad2b447893",
              "parentUUID": "1fa0f176-69f1-4eb4-9dfd-ed3a68c1982e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Signup error validation for Email address already in use (example #1)",
              "fullTitle": "Signup Page Signup error validation for Email address already in use (example #1)",
              "timedOut": null,
              "duration": 3335,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "87ec7930-e1b3-45b1-bb42-25db008d1e87",
              "parentUUID": "1fa0f176-69f1-4eb4-9dfd-ed3a68c1982e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Suggestions for stronger password (example #1)",
              "fullTitle": "Signup Page Suggestions for stronger password (example #1)",
              "timedOut": null,
              "duration": 2285,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "87d568af-63af-4cbf-8182-c30e00aeba40",
              "parentUUID": "1fa0f176-69f1-4eb4-9dfd-ed3a68c1982e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Suggestions for stronger password (example #2)",
              "fullTitle": "Signup Page Suggestions for stronger password (example #2)",
              "timedOut": null,
              "duration": 2432,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "13c5dbbe-d7fd-4d2a-baa2-811c6599231d",
              "parentUUID": "1fa0f176-69f1-4eb4-9dfd-ed3a68c1982e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Suggestions for stronger password (example #3)",
              "fullTitle": "Signup Page Suggestions for stronger password (example #3)",
              "timedOut": null,
              "duration": 2122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e092c40f-a972-48d8-8860-aafb97f544d5",
              "parentUUID": "1fa0f176-69f1-4eb4-9dfd-ed3a68c1982e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Already have an account",
              "fullTitle": "Signup Page Already have an account",
              "timedOut": null,
              "duration": 928,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "732a7755-e583-4412-bd36-6dc84a4c7eb0",
              "parentUUID": "1fa0f176-69f1-4eb4-9dfd-ed3a68c1982e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Signup for valid credentials (example #1)",
              "fullTitle": "Signup Page Signup for valid credentials (example #1)",
              "timedOut": null,
              "duration": 7253,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "\"assets/SignupPage.feature/Signup Page -- Signup for valid credentials (example #1) (failed).png\"",
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "CypressError: Timed out retrying: expected '/sign-up' to include 'choose-plan'",
                "estack": "CypressError: Timed out retrying: expected '/sign-up' to include 'choose-plan'\n    at Object.cypressErr (https://qa.perlego.com/__cypress/runner/cypress_runner.js:102176:11)\n    at Object.throwErr (https://qa.perlego.com/__cypress/runner/cypress_runner.js:102128:18)\n    at Object.throwErrByPath (https://qa.perlego.com/__cypress/runner/cypress_runner.js:102163:17)\n    at retry (https://qa.perlego.com/__cypress/runner/cypress_runner.js:92756:16)\n    at onFailFn (https://qa.perlego.com/__cypress/runner/cypress_runner.js:80982:16)\n    at tryCatcher (https://qa.perlego.com/__cypress/runner/cypress_runner.js:136088:23)\n    at Promise._settlePromiseFromHandler (https://qa.perlego.com/__cypress/runner/cypress_runner.js:134024:31)\n    at Promise._settlePromise (https://qa.perlego.com/__cypress/runner/cypress_runner.js:134081:18)\n    at Promise._settlePromise0 (https://qa.perlego.com/__cypress/runner/cypress_runner.js:134126:10)\n    at Promise._settlePromises (https://qa.perlego.com/__cypress/runner/cypress_runner.js:134201:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (https://qa.perlego.com/__cypress/runner/cypress_runner.js:130813:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://qa.perlego.com/__cypress/runner/cypress_runner.js:130823:10)\n    at Async.drainQueues (https://qa.perlego.com/__cypress/runner/cypress_runner.js:130697:14)",
                "diff": null
              },
              "uuid": "cc8c96b0-1ef8-4587-913c-28fd7a6ce8f9",
              "parentUUID": "1fa0f176-69f1-4eb4-9dfd-ed3a68c1982e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c226e666-7008-4932-84ba-6fe4d0197b17",
            "4973c555-629b-4d0e-98f0-ef0bb06c51c6",
            "f67b2771-5042-4876-aa8c-f47db8b77cf0",
            "81678a15-ebb3-4ddb-89ce-c5f5bfb1057b",
            "9fd8a1cc-b503-4da8-a7c3-d3f08deca840",
            "24541ca3-8282-4d7c-b055-fdad2b447893",
            "87ec7930-e1b3-45b1-bb42-25db008d1e87",
            "87d568af-63af-4cbf-8182-c30e00aeba40",
            "13c5dbbe-d7fd-4d2a-baa2-811c6599231d",
            "e092c40f-a972-48d8-8860-aafb97f544d5",
            "732a7755-e583-4412-bd36-6dc84a4c7eb0"
          ],
          "failures": [
            "cc8c96b0-1ef8-4587-913c-28fd7a6ce8f9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 34016,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": true,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "4.1.0"
    }
  }
}