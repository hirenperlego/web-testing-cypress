{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 5,
    "pending": 0,
    "failures": 1,
    "start": "2020-02-17T12:18:34.160Z",
    "end": "2020-02-17T12:18:34.835Z",
    "duration": 675,
    "testsRegistered": 6,
    "passPercent": 83.33333333333334,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b3a0f10f-6651-4c65-9789-024cc8e2d07f",
      "title": "",
      "fullFile": "cypress/integration/ConfirmationPage.feature",
      "file": "cypress/integration/ConfirmationPage.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89c10fdc-6ab7-4121-9d36-824fca193270",
          "title": "Confirmation Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Confirmation page heading and subheading",
              "fullTitle": "Confirmation Page Confirmation page heading and subheading",
              "timedOut": null,
              "duration": 48,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "36fab901-c5aa-4b58-ad89-d038b3c63704",
              "parentUUID": "89c10fdc-6ab7-4121-9d36-824fca193270",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Default I am a student radio button should be selected",
              "fullTitle": "Confirmation Page Default I am a student radio button should be selected",
              "timedOut": null,
              "duration": 36,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ee52ff62-6627-436f-9c56-ddf430bd50b4",
              "parentUUID": "89c10fdc-6ab7-4121-9d36-824fca193270",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Want to know a bit more about you for student",
              "fullTitle": "Confirmation Page Want to know a bit more about you for student",
              "timedOut": null,
              "duration": 411,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "\"assets/ConfirmationPage.feature/Confirmation Page -- Want to know a bit more about you for student (failed).png\"",
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "Error: Step implementation missing for: user is a student",
                "estack": "Error: Step implementation missing for: user is a student\n    at Context.resolveAndRunStepDefinition (https://qa.perlego.com/__cypress/tests?p=cypress/integration/ConfirmationPage.feature-844:25257:11)\n    at Object.<anonymous> (https://qa.perlego.com/__cypress/tests?p=cypress/integration/ConfirmationPage.feature-844:24623:35)\n    at executeFn (https://qa.perlego.com/__cypress/tests?p=cypress/support/index.js-220:2351:22)\n    at Context.<anonymous> (https://qa.perlego.com/__cypress/tests?p=cypress/support/index.js-220:2364:12)",
                "diff": null
              },
              "uuid": "1ce55a35-ca79-4408-bd27-380c9fc78d85",
              "parentUUID": "89c10fdc-6ab7-4121-9d36-824fca193270",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Want to know a bit more about you for professional",
              "fullTitle": "Confirmation Page Want to know a bit more about you for professional",
              "timedOut": null,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fdab2bc2-479f-4558-80e5-b8ed00127ad8",
              "parentUUID": "89c10fdc-6ab7-4121-9d36-824fca193270",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click Perlego logo",
              "fullTitle": "Confirmation Page Click Perlego logo",
              "timedOut": null,
              "duration": 48,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "27bf78f6-bd99-412c-b009-bd3d621f093e",
              "parentUUID": "89c10fdc-6ab7-4121-9d36-824fca193270",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Reset know a bit more about your fields for student and professional",
              "fullTitle": "Confirmation Page Reset know a bit more about your fields for student and professional",
              "timedOut": null,
              "duration": 52,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f2354c3c-f97a-40ee-bf43-28f1e0665b87",
              "parentUUID": "89c10fdc-6ab7-4121-9d36-824fca193270",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "36fab901-c5aa-4b58-ad89-d038b3c63704",
            "ee52ff62-6627-436f-9c56-ddf430bd50b4",
            "fdab2bc2-479f-4558-80e5-b8ed00127ad8",
            "27bf78f6-bd99-412c-b009-bd3d621f093e",
            "f2354c3c-f97a-40ee-bf43-28f1e0665b87"
          ],
          "failures": [
            "1ce55a35-ca79-4408-bd27-380c9fc78d85"
          ],
          "pending": [],
          "skipped": [],
          "duration": 624,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": true,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "4.1.0"
    }
  }
}