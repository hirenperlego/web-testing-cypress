{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2020-01-24T12:21:59.200Z",
    "end": "2020-01-24T12:22:17.491Z",
    "duration": 18291,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7df920ad-a4b0-409f-b00a-ba48170221c8",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f351b96a-621d-42ec-9cdf-bdc5a7b89756",
          "title": "Login Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User should able to view the main header on login page",
              "fullTitle": "Login Page User should able to view the main header on login page",
              "timedOut": null,
              "duration": 3468,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4c6e269a-41f5-43a6-8e91-eb62f117709d",
              "parentUUID": "f351b96a-621d-42ec-9cdf-bdc5a7b89756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with valid credentials (example #1)",
              "fullTitle": "Login Page Login with valid credentials (example #1)",
              "timedOut": null,
              "duration": 4548,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "71e484dd-ba2a-4ad0-b172-0bb467ddb08b",
              "parentUUID": "f351b96a-621d-42ec-9cdf-bdc5a7b89756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login errors validations for invalid credentials (example #1)",
              "fullTitle": "Login Page Login errors validations for invalid credentials (example #1)",
              "timedOut": null,
              "duration": 1646,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c56b7ee9-e640-4ab0-b4bd-22eb95970aff",
              "parentUUID": "f351b96a-621d-42ec-9cdf-bdc5a7b89756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login errors validations for invalid credentials (example #2)",
              "fullTitle": "Login Page Login errors validations for invalid credentials (example #2)",
              "timedOut": null,
              "duration": 1897,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f6133873-4442-48c1-bef7-d07e2986e453",
              "parentUUID": "f351b96a-621d-42ec-9cdf-bdc5a7b89756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login errors validations for invalid credentials (example #3)",
              "fullTitle": "Login Page Login errors validations for invalid credentials (example #3)",
              "timedOut": null,
              "duration": 1879,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "682eaf19-2d2b-4135-af3d-ca53b3abac05",
              "parentUUID": "f351b96a-621d-42ec-9cdf-bdc5a7b89756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Forgot password",
              "fullTitle": "Login Page Forgot password",
              "timedOut": null,
              "duration": 702,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b990f018-54cc-44f7-8939-365a47c71480",
              "parentUUID": "f351b96a-621d-42ec-9cdf-bdc5a7b89756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Don't have an account",
              "fullTitle": "Login Page Don't have an account",
              "timedOut": null,
              "duration": 839,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7c50d041-ccdf-4811-8480-2c237037b8bb",
              "parentUUID": "f351b96a-621d-42ec-9cdf-bdc5a7b89756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validations for blank email and password field (example #1)",
              "fullTitle": "Login Page Error validations for blank email and password field (example #1)",
              "timedOut": null,
              "duration": 743,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d669b06d-f088-48cc-b703-df433dfebb48",
              "parentUUID": "f351b96a-621d-42ec-9cdf-bdc5a7b89756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validation for blank email field (example #1)",
              "fullTitle": "Login Page Error validation for blank email field (example #1)",
              "timedOut": null,
              "duration": 1009,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "881d5fa1-7410-4cc1-9ac5-c9693756c9a9",
              "parentUUID": "f351b96a-621d-42ec-9cdf-bdc5a7b89756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validation for blank password field (example #1)",
              "fullTitle": "Login Page Error validation for blank password field (example #1)",
              "timedOut": null,
              "duration": 1076,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fbb56b4b-88fe-475d-b085-011b0d4ffa17",
              "parentUUID": "f351b96a-621d-42ec-9cdf-bdc5a7b89756",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c6e269a-41f5-43a6-8e91-eb62f117709d",
            "71e484dd-ba2a-4ad0-b172-0bb467ddb08b",
            "c56b7ee9-e640-4ab0-b4bd-22eb95970aff",
            "f6133873-4442-48c1-bef7-d07e2986e453",
            "682eaf19-2d2b-4135-af3d-ca53b3abac05",
            "b990f018-54cc-44f7-8939-365a47c71480",
            "7c50d041-ccdf-4811-8480-2c237037b8bb",
            "d669b06d-f088-48cc-b703-df433dfebb48",
            "881d5fa1-7410-4cc1-9ac5-c9693756c9a9",
            "fbb56b4b-88fe-475d-b085-011b0d4ffa17"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17807,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": true,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "4.1.0"
    }
  }
}