{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2020-01-18T16:06:37.295Z",
    "end": "2020-01-18T16:06:57.477Z",
    "duration": 20182,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "111861a8-5705-4c02-bd76-17ab3a11c040",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7ab079b6-3ca2-4072-a261-9ee9b44d8d1c",
          "title": "Login Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User should able to view the main header on login page",
              "fullTitle": "Login Page User should able to view the main header on login page",
              "timedOut": null,
              "duration": 1835,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7ffd7e98-436b-40e6-bf66-005541039b78",
              "parentUUID": "7ab079b6-3ca2-4072-a261-9ee9b44d8d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with valid credentials (example #1)",
              "fullTitle": "Login Page Login with valid credentials (example #1)",
              "timedOut": null,
              "duration": 5244,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "413f183f-b6f5-4de2-a9c3-560dfbaae5fc",
              "parentUUID": "7ab079b6-3ca2-4072-a261-9ee9b44d8d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login errors validations for invalid credentials (example #1)",
              "fullTitle": "Login Page Login errors validations for invalid credentials (example #1)",
              "timedOut": null,
              "duration": 1633,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3b8b04d7-092d-40d8-9547-2d71aef2f540",
              "parentUUID": "7ab079b6-3ca2-4072-a261-9ee9b44d8d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login errors validations for invalid credentials (example #2)",
              "fullTitle": "Login Page Login errors validations for invalid credentials (example #2)",
              "timedOut": null,
              "duration": 2029,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6c9295b2-d689-4601-85ad-c6379ae5b264",
              "parentUUID": "7ab079b6-3ca2-4072-a261-9ee9b44d8d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login errors validations for invalid credentials (example #3)",
              "fullTitle": "Login Page Login errors validations for invalid credentials (example #3)",
              "timedOut": null,
              "duration": 2007,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "76d0a2e4-072d-48d4-87c1-950d76ae100f",
              "parentUUID": "7ab079b6-3ca2-4072-a261-9ee9b44d8d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Forgot password",
              "fullTitle": "Login Page Forgot password",
              "timedOut": null,
              "duration": 673,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3e44ef32-1b3e-47fe-b396-f8c1b8ff9ba0",
              "parentUUID": "7ab079b6-3ca2-4072-a261-9ee9b44d8d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Don't have an account",
              "fullTitle": "Login Page Don't have an account",
              "timedOut": null,
              "duration": 1082,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9459118f-3e62-4d66-9921-cbac4b577ecd",
              "parentUUID": "7ab079b6-3ca2-4072-a261-9ee9b44d8d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validations for blank email and password field (example #1)",
              "fullTitle": "Login Page Error validations for blank email and password field (example #1)",
              "timedOut": null,
              "duration": 532,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "380511ce-28c7-42a5-8f2d-f6cc106fae11",
              "parentUUID": "7ab079b6-3ca2-4072-a261-9ee9b44d8d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validation for blank email field (example #1)",
              "fullTitle": "Login Page Error validation for blank email field (example #1)",
              "timedOut": null,
              "duration": 1061,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "af74f9ca-14d5-4e53-8563-0cdf9a0863a1",
              "parentUUID": "7ab079b6-3ca2-4072-a261-9ee9b44d8d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validation for blank password field (example #1)",
              "fullTitle": "Login Page Error validation for blank password field (example #1)",
              "timedOut": null,
              "duration": 1872,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "21c5482a-daac-4398-9e3b-e00a9899d740",
              "parentUUID": "7ab079b6-3ca2-4072-a261-9ee9b44d8d1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7ffd7e98-436b-40e6-bf66-005541039b78",
            "413f183f-b6f5-4de2-a9c3-560dfbaae5fc",
            "3b8b04d7-092d-40d8-9547-2d71aef2f540",
            "6c9295b2-d689-4601-85ad-c6379ae5b264",
            "76d0a2e4-072d-48d4-87c1-950d76ae100f",
            "3e44ef32-1b3e-47fe-b396-f8c1b8ff9ba0",
            "9459118f-3e62-4d66-9921-cbac4b577ecd",
            "380511ce-28c7-42a5-8f2d-f6cc106fae11",
            "af74f9ca-14d5-4e53-8563-0cdf9a0863a1",
            "21c5482a-daac-4398-9e3b-e00a9899d740"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17968,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": true,
        "html": true,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "4.1.0"
    }
  }
}