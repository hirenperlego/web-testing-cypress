{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2020-02-17T12:19:10.684Z",
    "end": "2020-02-17T12:19:30.749Z",
    "duration": 20065,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cf32906c-71db-4667-b24c-986411166d53",
      "title": "",
      "fullFile": "cypress/integration/LoginPage.feature",
      "file": "cypress/integration/LoginPage.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e7595e53-e153-4d58-9107-692156985cef",
          "title": "Login Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User should able to view the main header on login page",
              "fullTitle": "Login Page User should able to view the main header on login page",
              "timedOut": null,
              "duration": 3029,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8e29d982-ed28-41d2-9706-e92b10557e11",
              "parentUUID": "e7595e53-e153-4d58-9107-692156985cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with valid credentials (example #1)",
              "fullTitle": "Login Page Login with valid credentials (example #1)",
              "timedOut": null,
              "duration": 4725,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "929927a7-ea88-4b75-9d58-813391c9a205",
              "parentUUID": "e7595e53-e153-4d58-9107-692156985cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login errors validations for invalid credentials (example #1)",
              "fullTitle": "Login Page Login errors validations for invalid credentials (example #1)",
              "timedOut": null,
              "duration": 2073,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0be91014-2f12-4bdb-b37a-1ef588bc8a90",
              "parentUUID": "e7595e53-e153-4d58-9107-692156985cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login errors validations for invalid credentials (example #2)",
              "fullTitle": "Login Page Login errors validations for invalid credentials (example #2)",
              "timedOut": null,
              "duration": 2009,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bc4f081a-ca43-4420-8007-32d0a3c1890c",
              "parentUUID": "e7595e53-e153-4d58-9107-692156985cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login errors validations for invalid credentials (example #3)",
              "fullTitle": "Login Page Login errors validations for invalid credentials (example #3)",
              "timedOut": null,
              "duration": 2224,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "af310f45-e22a-49c9-83f9-2bd2716e0e46",
              "parentUUID": "e7595e53-e153-4d58-9107-692156985cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Forgot password",
              "fullTitle": "Login Page Forgot password",
              "timedOut": null,
              "duration": 589,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9937bd20-1e71-4936-b0a0-9252531c5a13",
              "parentUUID": "e7595e53-e153-4d58-9107-692156985cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Don't have an account",
              "fullTitle": "Login Page Don't have an account",
              "timedOut": null,
              "duration": 1840,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "44385260-4afc-4ab1-9f46-d5b251d7f15c",
              "parentUUID": "e7595e53-e153-4d58-9107-692156985cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validations for blank email and password field (example #1)",
              "fullTitle": "Login Page Error validations for blank email and password field (example #1)",
              "timedOut": null,
              "duration": 673,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e51578aa-3652-43d9-b75f-fc377f38b0b3",
              "parentUUID": "e7595e53-e153-4d58-9107-692156985cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validation for blank email field (example #1)",
              "fullTitle": "Login Page Error validation for blank email field (example #1)",
              "timedOut": null,
              "duration": 1230,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "051f1c09-e1c4-477c-957a-cad89dd73fd9",
              "parentUUID": "e7595e53-e153-4d58-9107-692156985cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validation for blank password field (example #1)",
              "fullTitle": "Login Page Error validation for blank password field (example #1)",
              "timedOut": null,
              "duration": 1381,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "81bbd08a-5c1a-4c4f-99c1-0f4d17bd8bcf",
              "parentUUID": "e7595e53-e153-4d58-9107-692156985cef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e29d982-ed28-41d2-9706-e92b10557e11",
            "929927a7-ea88-4b75-9d58-813391c9a205",
            "0be91014-2f12-4bdb-b37a-1ef588bc8a90",
            "bc4f081a-ca43-4420-8007-32d0a3c1890c",
            "af310f45-e22a-49c9-83f9-2bd2716e0e46",
            "9937bd20-1e71-4936-b0a0-9252531c5a13",
            "44385260-4afc-4ab1-9f46-d5b251d7f15c",
            "e51578aa-3652-43d9-b75f-fc377f38b0b3",
            "051f1c09-e1c4-477c-957a-cad89dd73fd9",
            "81bbd08a-5c1a-4c4f-99c1-0f4d17bd8bcf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19773,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": true,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "4.1.0"
    }
  }
}