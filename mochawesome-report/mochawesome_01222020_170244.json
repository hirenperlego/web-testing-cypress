{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2020-01-22T17:02:14.709Z",
    "end": "2020-01-22T17:02:44.387Z",
    "duration": 29678,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b13c05ad-77d8-491b-8ec0-51df3b8953ad",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "09e90c86-f013-4792-a291-ef4451cbc726",
          "title": "Login Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User should able to view the main header on login page",
              "fullTitle": "Login Page User should able to view the main header on login page",
              "timedOut": null,
              "duration": 2075,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0b1ed807-40d8-4790-a0be-99377e0d3ff9",
              "parentUUID": "09e90c86-f013-4792-a291-ef4451cbc726",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with valid credentials (example #1)",
              "fullTitle": "Login Page Login with valid credentials (example #1)",
              "timedOut": null,
              "duration": 6528,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "510bcaff-a431-42e2-8255-f64654642982",
              "parentUUID": "09e90c86-f013-4792-a291-ef4451cbc726",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login errors validations for invalid credentials (example #1)",
              "fullTitle": "Login Page Login errors validations for invalid credentials (example #1)",
              "timedOut": null,
              "duration": 2810,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cc56d170-6cf2-4d7a-844b-79208b0f8873",
              "parentUUID": "09e90c86-f013-4792-a291-ef4451cbc726",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login errors validations for invalid credentials (example #2)",
              "fullTitle": "Login Page Login errors validations for invalid credentials (example #2)",
              "timedOut": null,
              "duration": 3222,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "73b7899c-0f54-4003-a1a7-49fd4711eb63",
              "parentUUID": "09e90c86-f013-4792-a291-ef4451cbc726",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login errors validations for invalid credentials (example #3)",
              "fullTitle": "Login Page Login errors validations for invalid credentials (example #3)",
              "timedOut": null,
              "duration": 2347,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "af5bcdbc-2472-4a42-817f-7041eba5218a",
              "parentUUID": "09e90c86-f013-4792-a291-ef4451cbc726",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Forgot password",
              "fullTitle": "Login Page Forgot password",
              "timedOut": null,
              "duration": 1014,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "17e6c5d3-5094-49e5-892b-cde368e1bfaa",
              "parentUUID": "09e90c86-f013-4792-a291-ef4451cbc726",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Don't have an account",
              "fullTitle": "Login Page Don't have an account",
              "timedOut": null,
              "duration": 1955,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9e7c6db2-da71-4698-b12b-f8b9815a8b68",
              "parentUUID": "09e90c86-f013-4792-a291-ef4451cbc726",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validations for blank email and password field (example #1)",
              "fullTitle": "Login Page Error validations for blank email and password field (example #1)",
              "timedOut": null,
              "duration": 764,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0e1594bf-c4a1-4f35-8903-a5863829b0dd",
              "parentUUID": "09e90c86-f013-4792-a291-ef4451cbc726",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validation for blank email field (example #1)",
              "fullTitle": "Login Page Error validation for blank email field (example #1)",
              "timedOut": null,
              "duration": 3407,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "412b812b-a0bc-433e-a8c1-55cd0f548233",
              "parentUUID": "09e90c86-f013-4792-a291-ef4451cbc726",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validation for blank password field (example #1)",
              "fullTitle": "Login Page Error validation for blank password field (example #1)",
              "timedOut": null,
              "duration": 2246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "216f0073-8208-4aba-ad07-98419d94f8ac",
              "parentUUID": "09e90c86-f013-4792-a291-ef4451cbc726",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b1ed807-40d8-4790-a0be-99377e0d3ff9",
            "510bcaff-a431-42e2-8255-f64654642982",
            "cc56d170-6cf2-4d7a-844b-79208b0f8873",
            "73b7899c-0f54-4003-a1a7-49fd4711eb63",
            "af5bcdbc-2472-4a42-817f-7041eba5218a",
            "17e6c5d3-5094-49e5-892b-cde368e1bfaa",
            "9e7c6db2-da71-4698-b12b-f8b9815a8b68",
            "0e1594bf-c4a1-4f35-8903-a5863829b0dd",
            "412b812b-a0bc-433e-a8c1-55cd0f548233",
            "216f0073-8208-4aba-ad07-98419d94f8ac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26368,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": true,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "4.1.0"
    }
  }
}