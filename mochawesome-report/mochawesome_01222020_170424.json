{
  "stats": {
    "suites": 1,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2020-01-22T17:03:41.859Z",
    "end": "2020-01-22T17:04:24.387Z",
    "duration": 42528,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "413a9724-fdf4-4a20-b563-6040764964c3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5afd2cdd-361a-442b-8770-382b0cdc127e",
          "title": "Signup Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Signup errors validations for invalid credentials (example #1)",
              "fullTitle": "Signup Page Signup errors validations for invalid credentials (example #1)",
              "timedOut": null,
              "duration": 5489,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c6513895-23c2-4928-ae2e-31d015145140",
              "parentUUID": "5afd2cdd-361a-442b-8770-382b0cdc127e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Signup errors validations for invalid credentials (example #2)",
              "fullTitle": "Signup Page Signup errors validations for invalid credentials (example #2)",
              "timedOut": null,
              "duration": 3282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bb90dc50-3f53-4da7-a5b1-11e0165b74fa",
              "parentUUID": "5afd2cdd-361a-442b-8770-382b0cdc127e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validations for blank email and password field (example #1)",
              "fullTitle": "Signup Page Error validations for blank email and password field (example #1)",
              "timedOut": null,
              "duration": 1333,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a096f709-e785-4f0f-a9d9-0a8bc687e5f4",
              "parentUUID": "5afd2cdd-361a-442b-8770-382b0cdc127e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validation for blank email field (example #1)",
              "fullTitle": "Signup Page Error validation for blank email field (example #1)",
              "timedOut": null,
              "duration": 2669,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b56a972a-64eb-454b-b0bd-9ca645238af1",
              "parentUUID": "5afd2cdd-361a-442b-8770-382b0cdc127e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validation for blank password field (example #1)",
              "fullTitle": "Signup Page Error validation for blank password field (example #1)",
              "timedOut": null,
              "duration": 2461,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b82443c1-b195-43af-b143-972ad7ccebb9",
              "parentUUID": "5afd2cdd-361a-442b-8770-382b0cdc127e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Signup errors for not accepting the Perlego's terms and conditions (example #1)",
              "fullTitle": "Signup Page Signup errors for not accepting the Perlego's terms and conditions (example #1)",
              "timedOut": null,
              "duration": 2845,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fe991a6f-ce71-470a-b18c-e7ba3ed8f7cc",
              "parentUUID": "5afd2cdd-361a-442b-8770-382b0cdc127e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Signup error validation for Email address already in use (example #1)",
              "fullTitle": "Signup Page Signup error validation for Email address already in use (example #1)",
              "timedOut": null,
              "duration": 4035,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d3c720c8-05cf-42a2-9f61-91dd490791be",
              "parentUUID": "5afd2cdd-361a-442b-8770-382b0cdc127e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Suggestions for stronger password (example #1)",
              "fullTitle": "Signup Page Suggestions for stronger password (example #1)",
              "timedOut": null,
              "duration": 3010,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4b6de151-2df6-42e6-8272-080edac7aa60",
              "parentUUID": "5afd2cdd-361a-442b-8770-382b0cdc127e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Suggestions for stronger password (example #2)",
              "fullTitle": "Signup Page Suggestions for stronger password (example #2)",
              "timedOut": null,
              "duration": 2808,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "dcf3bbc0-38fb-4a5b-a3f3-87249f82873e",
              "parentUUID": "5afd2cdd-361a-442b-8770-382b0cdc127e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Suggestions for stronger password (example #3)",
              "fullTitle": "Signup Page Suggestions for stronger password (example #3)",
              "timedOut": null,
              "duration": 2365,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "76de455c-8268-4f9b-8373-c17cd8c60cd4",
              "parentUUID": "5afd2cdd-361a-442b-8770-382b0cdc127e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Already have an account",
              "fullTitle": "Signup Page Already have an account",
              "timedOut": null,
              "duration": 1509,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fae4eb4a-a3db-4d73-833f-27d59bc7919f",
              "parentUUID": "5afd2cdd-361a-442b-8770-382b0cdc127e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Signup for valid credentials (example #1)",
              "fullTitle": "Signup Page Signup for valid credentials (example #1)",
              "timedOut": null,
              "duration": 8038,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "145152d6-b0ba-47ce-b863-bc90f90571b9",
              "parentUUID": "5afd2cdd-361a-442b-8770-382b0cdc127e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c6513895-23c2-4928-ae2e-31d015145140",
            "bb90dc50-3f53-4da7-a5b1-11e0165b74fa",
            "a096f709-e785-4f0f-a9d9-0a8bc687e5f4",
            "b56a972a-64eb-454b-b0bd-9ca645238af1",
            "b82443c1-b195-43af-b143-972ad7ccebb9",
            "fe991a6f-ce71-470a-b18c-e7ba3ed8f7cc",
            "d3c720c8-05cf-42a2-9f61-91dd490791be",
            "4b6de151-2df6-42e6-8272-080edac7aa60",
            "dcf3bbc0-38fb-4a5b-a3f3-87249f82873e",
            "76de455c-8268-4f9b-8373-c17cd8c60cd4",
            "fae4eb4a-a3db-4d73-833f-27d59bc7919f",
            "145152d6-b0ba-47ce-b863-bc90f90571b9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 39844,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": true,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "4.1.0"
    }
  }
}