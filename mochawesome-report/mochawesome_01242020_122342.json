{
  "stats": {
    "suites": 1,
    "tests": 12,
    "passes": 11,
    "pending": 0,
    "failures": 1,
    "start": "2020-01-24T12:23:12.493Z",
    "end": "2020-01-24T12:23:42.926Z",
    "duration": 30433,
    "testsRegistered": 12,
    "passPercent": 91.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5cc1b7d5-4a2b-4561-94df-5c8a0175765c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "70285a9a-b35f-470e-91fc-f1b531bf2c94",
          "title": "Signup Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Signup errors validations for invalid credentials (example #1)",
              "fullTitle": "Signup Page Signup errors validations for invalid credentials (example #1)",
              "timedOut": null,
              "duration": 4106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "93a22f49-6f84-4ed2-8db4-50eb68251eae",
              "parentUUID": "70285a9a-b35f-470e-91fc-f1b531bf2c94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Signup errors validations for invalid credentials (example #2)",
              "fullTitle": "Signup Page Signup errors validations for invalid credentials (example #2)",
              "timedOut": null,
              "duration": 2662,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d7e6b1f0-e6bf-4670-b0ce-dbab70e2e6e3",
              "parentUUID": "70285a9a-b35f-470e-91fc-f1b531bf2c94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validations for blank email and password field (example #1)",
              "fullTitle": "Signup Page Error validations for blank email and password field (example #1)",
              "timedOut": null,
              "duration": 1035,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1aa4bc0f-05fd-495f-8a22-266a078eeb7e",
              "parentUUID": "70285a9a-b35f-470e-91fc-f1b531bf2c94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validation for blank email field (example #1)",
              "fullTitle": "Signup Page Error validation for blank email field (example #1)",
              "timedOut": null,
              "duration": 1955,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "847ae310-1b15-49f9-b3dd-77ef9212a7fb",
              "parentUUID": "70285a9a-b35f-470e-91fc-f1b531bf2c94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error validation for blank password field (example #1)",
              "fullTitle": "Signup Page Error validation for blank password field (example #1)",
              "timedOut": null,
              "duration": 2202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0d4bf19b-4141-4cf9-802f-281f6ae49856",
              "parentUUID": "70285a9a-b35f-470e-91fc-f1b531bf2c94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Signup errors for not accepting the Perlego's terms and conditions (example #1)",
              "fullTitle": "Signup Page Signup errors for not accepting the Perlego's terms and conditions (example #1)",
              "timedOut": null,
              "duration": 1831,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2445b532-8834-42fe-8d38-4713fb0b8bff",
              "parentUUID": "70285a9a-b35f-470e-91fc-f1b531bf2c94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Signup error validation for Email address already in use (example #1)",
              "fullTitle": "Signup Page Signup error validation for Email address already in use (example #1)",
              "timedOut": null,
              "duration": 2920,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "28df2bd3-7083-4bb3-a72b-cf5ed1b25d18",
              "parentUUID": "70285a9a-b35f-470e-91fc-f1b531bf2c94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Suggestions for stronger password (example #1)",
              "fullTitle": "Signup Page Suggestions for stronger password (example #1)",
              "timedOut": null,
              "duration": 1544,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6e914b21-c948-4480-8c35-73f4aab87e27",
              "parentUUID": "70285a9a-b35f-470e-91fc-f1b531bf2c94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Suggestions for stronger password (example #2)",
              "fullTitle": "Signup Page Suggestions for stronger password (example #2)",
              "timedOut": null,
              "duration": 1805,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9c3d308a-4083-4cce-87fa-5be4aacf969c",
              "parentUUID": "70285a9a-b35f-470e-91fc-f1b531bf2c94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Suggestions for stronger password (example #3)",
              "fullTitle": "Signup Page Suggestions for stronger password (example #3)",
              "timedOut": null,
              "duration": 1868,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ee4b1a9e-e2d0-4482-b079-c0eda27623d3",
              "parentUUID": "70285a9a-b35f-470e-91fc-f1b531bf2c94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Already have an account",
              "fullTitle": "Signup Page Already have an account",
              "timedOut": null,
              "duration": 669,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6ae99f8f-5f8d-4294-a0ba-8529ccaa7bbb",
              "parentUUID": "70285a9a-b35f-470e-91fc-f1b531bf2c94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Signup for valid credentials (example #1)",
              "fullTitle": "Signup Page Signup for valid credentials (example #1)",
              "timedOut": null,
              "duration": 7263,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "\"assets/Signup.feature/Signup Page -- Signup for valid credentials (example #1) (failed).png\"",
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "CypressError: Timed out retrying: expected '/sign-up' to include 'choose-plan'",
                "estack": "CypressError: Timed out retrying: expected '/sign-up' to include 'choose-plan'\n    at Object.cypressErr (https://qa.perlego.com/__cypress/runner/cypress_runner.js:86206:11)\n    at Object.throwErr (https://qa.perlego.com/__cypress/runner/cypress_runner.js:86161:18)\n    at Object.throwErrByPath (https://qa.perlego.com/__cypress/runner/cypress_runner.js:86193:17)\n    at retry (https://qa.perlego.com/__cypress/runner/cypress_runner.js:76849:16)\n    at onFailFn (https://qa.perlego.com/__cypress/runner/cypress_runner.js:65634:16)\n    at tryCatcher (https://qa.perlego.com/__cypress/runner/cypress_runner.js:120669:23)\n    at Promise._settlePromiseFromHandler (https://qa.perlego.com/__cypress/runner/cypress_runner.js:118605:31)\n    at Promise._settlePromise (https://qa.perlego.com/__cypress/runner/cypress_runner.js:118662:18)\n    at Promise._settlePromise0 (https://qa.perlego.com/__cypress/runner/cypress_runner.js:118707:10)\n    at Promise._settlePromises (https://qa.perlego.com/__cypress/runner/cypress_runner.js:118782:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (https://qa.perlego.com/__cypress/runner/cypress_runner.js:115394:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://qa.perlego.com/__cypress/runner/cypress_runner.js:115404:10)\n    at Async.drainQueues (https://qa.perlego.com/__cypress/runner/cypress_runner.js:115278:14)",
                "diff": null
              },
              "uuid": "1e951c34-d9af-4a9f-ba26-2e77c55df82a",
              "parentUUID": "70285a9a-b35f-470e-91fc-f1b531bf2c94",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "93a22f49-6f84-4ed2-8db4-50eb68251eae",
            "d7e6b1f0-e6bf-4670-b0ce-dbab70e2e6e3",
            "1aa4bc0f-05fd-495f-8a22-266a078eeb7e",
            "847ae310-1b15-49f9-b3dd-77ef9212a7fb",
            "0d4bf19b-4141-4cf9-802f-281f6ae49856",
            "2445b532-8834-42fe-8d38-4713fb0b8bff",
            "28df2bd3-7083-4bb3-a72b-cf5ed1b25d18",
            "6e914b21-c948-4480-8c35-73f4aab87e27",
            "9c3d308a-4083-4cce-87fa-5be4aacf969c",
            "ee4b1a9e-e2d0-4482-b079-c0eda27623d3",
            "6ae99f8f-5f8d-4294-a0ba-8529ccaa7bbb"
          ],
          "failures": [
            "1e951c34-d9af-4a9f-ba26-2e77c55df82a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 29860,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": true,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "4.1.0"
    }
  }
}